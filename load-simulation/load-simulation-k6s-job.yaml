apiVersion: v1
kind: ConfigMap
metadata:
  name: load-simulation-script
data:
  run_k6.sh: |-
    #!/bin/sh

    set -euxo pipefail

    apk add git ca-certificates
    CGO_ENABLED=0 go install go.k6.io/xk6/cmd/xk6@latest
    CGO_ENABLED=0 xk6 build \
    --with github.com/grafana/xk6-output-prometheus-remote \
    --output /tmp/k6

    export K6_PROMETHEUS_RW_SERVER_URL=http://kube-prometheus-stack-prometheus.observability.svc.cluster.local:9090/api/v1/write
    
    set +eo pipefail
    while true;
    do
      /tmp/k6 run \
         --insecure-skip-tls-verify \
        -o xk6-prometheus-rw \
        -u 1000 \
        -d 15s \
        "$(dirname "$0")/script.js"
    done


  script.js: |-
    import http from "k6/http";
    import { sleep } from "k6";

    const API_BASE_URL = 'https://host.k3d.internal';
    const params = {
      headers: {
        Host: "hello.k3d.localhost"
      }
    }

    export default function () {
      http.batch([
        ["GET", `${API_BASE_URL}/`, null, params]
      ]);

      sleep(1);
    }
---
apiVersion: batch/v1
kind: Job
metadata:
  name: load-simulation
spec:
  parallelism: 1
  completions: null
  template:
    metadata:
      name: load-simulation
    spec:
      restartPolicy: Never
      containers:
      - name: k6
        image: golang:1.19-alpine
        command: ["sh"]
        args: ["/mnt/scripts/run_k6.sh"]
        volumeMounts:
        - mountPath: /mnt/scripts
          name: scripts
      volumes:
      - name: scripts
        configMap:
          name: load-simulation-script
